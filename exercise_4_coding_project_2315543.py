# -*- coding: utf-8 -*-
"""Exercise_4_Coding_project_2315543.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GbojfS_nETQ6DiL5Nm6CdNTwFbhvCyPw
"""

# Function to find students in a specific department
def read_student_data(filename):
    try:
        with open(filename, 'r') as file:
          # Create an empty list to store students
            students = []
            # Strip and split each line then unpack the data into a tuple
            for line in file:
                data = line.strip().split(',')
                registration_number, name, department = data
                students.append((name, registration_number, department))
            return students
    # If the specified file cannot be opened, raise an exception to indicate the error.
    except FileNotFoundError:
        print(f"File '{filename}' file doesn't exist.")
        return None

# Function to prompt the user for a filename and read the student's department
# Initialize an empty list to store matching students and
# Iterate through the list of students
# If it matches, add the student's name and registration number to the matching list
def find_students_by_department(students, department):
    matching_students = []
    for student in students:
        if student[2] == department:
            matching_students.append((student[0], student[1]))

    # Sort the matching students by their registration number
    # Check if there are any matching students
    # If there are no matching students, print a message indicating no students were found
    matching_students.sort(key=lambda x: x[1])
    if not matching_students:
        print(f"No students found in the department {department}.")
        return None

    # If matching students were found, return the sorted list of matching students
    return matching_students

def main():
    # Prompt the user for the filename
    filename = input("Enter the filename: ")

    # Read student data from the file
    students = read_student_data(filename)

    # Check if the file could be read successfully
    if students is None:
        return

    # Print the student data
    print("List of students:")
    print(students)

    # Loop to continue querying departments until the user quits
    while True:
        # Prompt the user for a department name
        department = input("Enter the name of a department: ")

        # Find students in the specified department
        matching_students = find_students_by_department(students, department)

        # Check if any matching students were found
        if matching_students is None:
            break

        # Print the matching students
        print(f"Students in the {department} department:")
        for student in matching_students:
            print(f"{student[0]} ({student[1]})")

        # Prompt the user to continue or quit
        quit = input("Quit (yes/no)? ")

        # Check if the user wants to quit
        if quit.lower() == "yes":
            break

if __name__ == "__main__":
    main()