# -*- coding: utf-8 -*-
"""Exercise_3_Coding_project_2315543.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1--BiwFzk3tYEy_Iu2B3YHD6trriGh03b
"""

def fun1(string):
    # Convert the string to lowercase
    string = string.lower()

    # Remove spaces from the string
    string = string.replace(' ', '')

    # Reverse the string
    reversed_string = string[::-1]

    # Check if the original string matches the reversed string
    return string == reversed_string


def fun2(string):
    # Initialize a dictionary to store letter and digit counts
    letter_digit_counts = {}

    # Convert the string to lowercase
    string = string.lower()

    # Iterate through the string and update the dictionary with with letter/digit counts
    for char in string:
        if char.isalpha() or char.isdigit():
            if char not in letter_digit_counts:
                letter_digit_counts[char] = 0
            letter_digit_counts[char] += 1

    # Check if there are no letters or digits
    if not letter_digit_counts:
        return None

    # Find the most frequent letter/digit
    most_frequent_char = None
    most_frequent_count = 0
    for char, count in letter_digit_counts.items():
        if count > most_frequent_count:
            most_frequent_count = count
            most_frequent_char = char

    return most_frequent_char


def fun3(string):
    # Initialize counters for letters, spaces, and digits
    letter_count = 0
    space_count = 0
    digit_count = 0

    # Iterate through the string and count the correponding characters
    for char in string:
        if char.isalpha():
            letter_count += 1
        elif char == ' ':
            space_count += 1
        elif char.isdigit():
            digit_count += 1

    # Return a tuple containing the three counts
    return (letter_count, space_count, digit_count)